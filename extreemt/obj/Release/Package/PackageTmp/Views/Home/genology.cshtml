@using org.jivesoftware.util;
@{
    ViewBag.Title = "genology";
}

@helper renderEmptyNode(extreemt.user currentUser, extreemt.user loginUser, string cssClass)
{
    string url = "#";

    extreemt.crypt algo = new extreemt.crypt();
    string content = "";
    if (loginUser.credit >= 250)
    {
        if (currentUser != null)
        {
            //parent gen number , my position , parent user id
            content = currentUser.genNumber + "$$$left$$$" + currentUser.userId;
            content = algo.Encrypt(content);
            content = HttpUtility.UrlEncode(content.Replace("+", "25252"));
             url = Url.Action("SignUp", "Account") + "?a=" + content;
        }
    }
    <div class="@cssClass">
        <div style=" background-color:gray;text-align:center;border-style:solid;border-radius:10px;">

            <div class="">
                <img src="~/Content/images/images.jpg" width="60" height="60" style="border: 2px solid gray;">
            </div>


            <div class="">
                <span>Empty</span>
            </div>
            <div class="">
                <span><a href="@url">Add One</a></span>
            </div>

        </div>
    </div>
}

@helper renderNode(extreemt.user user, string cssClass)
{
<div class="@cssClass">
    @{
        string backGround = "white";
        if (user.status == "inActive")
        {
            backGround = "burlywood";
        }
    }
        <div style="background-color:@backGround;text-align:center;border-style:solid;border-radius:10px">

            <div class="">
                <img src="~/Content/images/images.jpg" width="60" height="60" style="border: 2px solid gray;">
            </div>

            @{
                
                extreemt.crypt algo = new extreemt.crypt();
                string userId = algo.Encrypt(user.userId + "$$$" + user.genNumber);

                userId = HttpUtility.UrlEncode(userId.Replace("+", "25252"));
                string url = Url.Action("genology", "Home") + "?a=" + userId;
            }
            <div class=""><a href="@url">@user.userId</a> </div>

            <div class="">
                <span>@user.firstname @user.lastname</span>
            </div>

            <div class="greenrow">
                L: @user.leftActiveCount  R: @user.rightActiveCount
            </div>
            <div class="redrow">
                L: @user.leftInactiveCount R: @user.rightInactiveCount
            </div>

        </div>
    </div>
}







@section head{
    <style>
        .greenrow {
            font-family: Arial;
            background-color: MediumSeaGreen;
            text-align: center;
        }

        .redrow {
            width: 100%;
            font-family: Arial;
            background-color: #FF6666;
            text-align: center;
        }

        .col-md-1-nos {
            display: inline-block;
        }
    </style>
}
<h2>genology</h2>

@{
    string id, decryptedId;
        int currentUserId, GenNumber;
        extreemt.crypt algo;
    try
    {
         id = (string)ViewData["id"];

         algo = new extreemt.crypt();
         decryptedId = algo.Decrypt(id);
        string[] user = decryptedId.Split(new char[] { '$', '$', '$' });
        //string position = "parent";

         currentUserId = int.Parse(user[0]);
        int i = 1;
        while (user[i] == "")
        {
            i++;
        }
         GenNumber = int.Parse(user[i]);
    }
    catch (Exception c)
    {
        return;
    }


    if (currentUserId != null && currentUserId != 0)
    {

        extreemt.user leftUser = null;
        extreemt.user rightUser = null;
        extreemt.extreemtEntities db = new extreemt.extreemtEntities();

        extreemt.user currentUser = db.users.Where(u => u.userId == currentUserId && u.genNumber == GenNumber).First();
        extreemt.user loginUser = currentUser;
        if (currentUser.genNumber == 1)
        {
            if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
            {

                leftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
            }
            if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
            {

                rightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
            }
        }
        else if (currentUser.genNumber == 2)
        {
            if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
            {

                leftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
            }
            if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
            {

                rightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
            }
        }
        else
        {

            if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
            {

                leftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
            }
            if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
            {

                rightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
            }
        }
        
        <div class="container">
            <div class="row">
                @renderNode(currentUser, "col-md-offset-5 col-md-2");
            </div>
            <br />
            <div class="row">
                <div class="col-md-offset-3 col-md-6">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>
            </div>
            <br />
            <!--level2-->

            <div class="row">
                @{


        if (leftUser != null)
        {
            @renderNode(leftUser, "col-md-offset-2 col-md-2");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser,"col-md-offset-2 col-md-2");
        }
                }


                @{

        if (rightUser != null)
        {
            @renderNode(rightUser, "col-md-offset-4 col-md-2");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-offset-4 col-md-2");
        }
                }
            </div>
            <br />
            <div class="row">

                <div class="col-md-offset-1 col-md-4">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>


                <div class="col-md-offset-2 col-md-4">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>


            </div>
            <br />
            <!--level 3-->
            <div class="row">
                @{
        extreemt.user leftLeftUser = null;
        extreemt.user leftRightUser = null;
        currentUser = leftUser;
        if (currentUser != null)
        {
            if (currentUser.genNumber == 1)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
                {

                    leftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
                {

                    leftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
                }
            }
            else if (currentUser.genNumber == 2)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
                {

                    leftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
                {

                    leftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
                }
            }
            else
            {

                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
                {

                    leftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
                {

                    leftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
                }
            }

        }






        if (leftLeftUser != null)
        {
            @renderNode(leftLeftUser, "col-md-offset-3-arb3 col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-offset-3-arb3 col-md-1-nos");

        }

        if (leftRightUser != null)
                {
            @renderNode(leftRightUser, "col-md-offset-1-nos col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-offset-1-nos col-md-1-nos");

        }
        
                }
                @{
        extreemt.user rightLeftUser = null;
        extreemt.user rightRightUser = null;
        currentUser = rightUser;
        if (currentUser != null)
        {
            if (currentUser.genNumber == 1)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
                {

                    rightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
                {

                    rightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
                }
            }
            else if (currentUser.genNumber == 2)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
                {

                    rightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
                {

                    rightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
                }
            }
            else
            {

                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
                {

                    rightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
                {

                    rightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
                }
            }



        }

        if (rightLeftUser != null)                {
            @renderNode(rightLeftUser, "col-md-offset-1-nos col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-offset-1-nos col-md-1-nos");

        }

        if (rightRightUser != null) {
            @renderNode(rightRightUser, "col-md-offset-1-nos col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-offset-1-nos col-md-1-nos");

        }
       
                }

            </div>
            <br />
            <div class="row">

                <div class="col-md-2" style="margin-left:3.42599%">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>


                <div class="col-md-offset-1 col-md-2">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>
                <div class="col-md-offset-1 col-md-2">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>


                <div class="col-md-offset-1 col-md-2">

                    <img width="100%" height="100%" src="~/Content/images/level1.PNG">

                </div>

            </div>
            <br />

            <!--level 4-->
            <div class="row">

                @{
        extreemt.user leftLeftLeftUser = null;
        extreemt.user leftLeftRightUser = null;
        currentUser = leftLeftUser;
        if (currentUser != null)
        {
            if (currentUser.genNumber == 1)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
                {

                    leftLeftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
                {

                    leftLeftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
                }
            }
            else if (currentUser.genNumber == 2)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
                {

                    leftLeftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
                {

                    leftLeftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
                }
            }
            else
            {

                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
                {

                    leftLeftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
                {

                    leftLeftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
                }
            }



        }

        if (leftLeftLeftUser != null){
            @renderNode(leftLeftLeftUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }

        if (leftLeftRightUser != null){
            @renderNode(leftLeftRightUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }
  
                }

                @{
        extreemt.user leftRightLeftUser = null;
        extreemt.user leftRightRightUser = null;
        currentUser = leftRightUser;
        if (currentUser != null)
        {
            if (currentUser.genNumber == 1)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
                {

                    leftRightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
                {

                    leftRightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
                }
            }
            else if (currentUser.genNumber == 2)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
                {

                    leftRightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
                {

                    leftRightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
                }
            }
            else
            {

                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
                {

                    leftRightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
                {

                    leftRightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
                }
            }



        }

        if (leftRightLeftUser != null){
            @renderNode(leftRightLeftUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }


        if (leftRightRightUser != null){
            @renderNode(leftRightRightUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }

       
                }

                @{
        extreemt.user rightLeftLeftUser = null;
        extreemt.user rightLeftRightUser = null;
        currentUser = rightLeftUser;
        if (currentUser != null)
        {
            if (currentUser.genNumber == 1)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
                {

                    rightLeftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
                {

                    rightLeftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
                }
            }
            else if (currentUser.genNumber == 2)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
                {

                    rightLeftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
                {

                    rightLeftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
                }
            }
            else
            {

                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
                {

                    rightLeftLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
                {

                    rightLeftRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
                }
            }



        }

        if (rightLeftLeftUser != null)
        {
            @renderNode(rightLeftLeftUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }

        if (rightLeftRightUser != null)
        {
            @renderNode(rightLeftRightUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }
}
                @{
        extreemt.user rightRightLeftUser = null;
        extreemt.user rightRightRightUser = null;
        currentUser = rightRightUser;
        if (currentUser != null)
        {
            if (currentUser.genNumber == 1)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).Count() > 0)
                {

                    rightRightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).Count() > 0)
                {

                    rightRightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 3).First();
                }
            }
            else if (currentUser.genNumber == 2)
            {
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).Count() > 0)
                {

                    rightRightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 2).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).Count() > 0)
                {

                    rightRightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 2).First();
                }
            }
            else
            {

                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).Count() > 0)
                {

                    rightRightLeftUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "left" && u.parentGenNum == 3).First();
                }
                if (db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).Count() > 0)
                {

                    rightRightRightUser = db.users.Where(u => u.parentUserId == currentUser.userId && u.genNumber == 1 && u.position == "right" && u.parentGenNum == 3).First();
                }
            }



        }

        if (rightRightLeftUser != null)
        {
            @renderNode(rightRightLeftUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }
        if (rightRightRightUser != null)
        {
            @renderNode(rightRightRightUser, "col-md-1-nos");
        }
        else
        {
            @renderEmptyNode(currentUser, loginUser, "col-md-1-nos");

        }
}
            </div>
            <br />
        </div>

    }
}
